plugins {
    id 'com.android.application'
    //Kotlin开发环境默认添加的id
    id 'kotlin-android'
    //注解处理器插件,可替换我们java中annotationProcessor
    id 'kotlin-kapt'
    //Parcelable序列化
    id 'kotlin-parcelize'
    //dagger hilt
    id 'dagger.hilt.android.plugin'
    //Realm数据库
    id 'realm-android'
}

//@Parcelize的使用
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.edw.kotlinusedev"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        kapt {
            correctErrorTypes true
            arguments {
                //ARouter Kotlin开发环境下使用kapt
                arg("AROUTER_MODULE_NAME", project.getName())
                //Room在Kotlin开发环境中kapt
//                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    //使用Viewbinding
    buildFeatures {
        viewBinding true
    }

}


//kotlin {
//    experimental {
//        coroutines 'enable'
//    }
//}
dependencies {
    //Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Kotlin核心库
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.2'

    //androidX及控件类库
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.3.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'

    //Glide
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    api "com.github.bumptech.glide:glide:$glide_version"

    //协程
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    api "io.reactivex.rxjava3:rxandroid:$rxjava3_version"
    api "io.reactivex.rxjava3:rxjava:$rxjava3_version"


    //ARouter阿里路由框架
    api "com.alibaba:arouter-api:$arouter_version"
    kapt "com.alibaba:arouter-compiler:$arouter_version"

    //EventBus
    api 'org.greenrobot:eventbus:3.2.0'

    //Koin Kotlin依赖注入框架
    api "org.koin:koin-core:$koin_version"
    api "org.koin:koin-core-ext:$koin_version"
    api "org.koin:koin-android:$koin_version"
    // Koin AndroidX ViewModel features
    api "org.koin:koin-androidx-viewmodel:$koin_version"
    // Koin AndroidX Fragment features
    api "org.koin:koin-androidx-fragment:$koin_version"

    //Dagger Hilt框架注入
    api "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    //Room数据库
//    implementation "androidx.room:room-runtime:$room_version"
//    kapt "androidx.room:room-compilerversion:$room_version"
//    implementation "androidx.room:room-ktx:$room_version"

    //Coil 图片加载
    api "io.coil-kt:coil:$coil_version"
    api "io.coil-kt:coil-gif:$coil_version" //gif解码
    api "io.coil-kt:coil-svg:$coil_version" //svg解码

}